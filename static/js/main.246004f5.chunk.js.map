{"version":3,"sources":["api/api.ts","redux/dialogs-reducer.ts","assets/images/logo.png","components/Login/Login.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-reducer.ts","redux/user-selectors.ts","components/Users/UsersContainer.tsx","hooks/mainAppRenderProps.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/redux-store.ts","components/hoc/withSuspense.tsx","App.tsx","index.tsx","components/Users/Users.module.css","components/common/Preloader/Preloader.tsx","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","assets/images/avatar.png","utils/Form-validator.tsx","components/common/FormControls/FormControls.tsx","components/Profile/MyPosts/MyPosts.module.css","redux/profile-reducer.ts"],"names":["mainUrl","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","pageSize","currentPage","get","then","response","data","unfollow","userId","fetch","method","credentials","follow","getProfile","console","warn","profileAPI","savePhoto","photoFile","formData","FormData","append","body","json","updateStatus","status","put","getStatus","saveProfile","profile","JSON","stringify","authAPI","me","catch","log","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","addMessageTextAC","newMessageBody","type","payload","dialogsReducer","state","action","Date","now","module","exports","Boolean","window","location","hostname","match","Header","props","className","s","header","logo","src","loginBlock","userAuthData","isAuth","to","onClick","userAvatar","captchaUrl","setAuthUserData","getAuthUserData","dispatch","a","resultCode","url","authReducer","HeaderContainer","this","React","Component","connect","auth","Navbar","activeLink","active","nav","item","activeClassName","Paginator","memo","totalItemsCount","onPageChanged","pageNumber","portionSize","pages","pagesCount","Math","ceil","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","style","paginator","filter","p","map","cn","selectedPage","selectedPage2","key","User","user","followingInProgress","alt","width","photos","small","userPhoto","marginBottom","followed","disabled","some","Users","getRequestUsers","users","isFetching","useEffect","useCallback","Preloader","usersWrapper","totalUsersCount","setCurrentPage","page","toggleFollowingInProgress","usersReducer","usersCount","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","followSuccess","unfollowSuccess","items","totalCount","Error","border","color","counter","Success","Avatar","height","Confirm","setCounter","ref","createRef","current","counterInterval","setInterval","clearInterval","padding","background","renderContent","onOkClick","onCancelClick","MainAppRenderProps","success","error","avatar","alert","setState","PureComponent","mapStateToProps","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","commonErrorText","valid","stopSubmit","_error","initialized","globalError","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleWare","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","initializeApp","addEventListener","removeEventListener","path","exact","render","UsersContainer","AppContainer","compose","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","value","undefined","maxLength","max","length","number","isNaN","Number","FormControl","input","meta","touched","rest","hasError","formControl","element","fieldCreator","validators","FieldCreator","TextArea","posts","likesCount","profileUpdateStatus","addPostAC","newPostText","setUserProfile","setProfileUpdateStatus","setStatus","err","getUserProfile","file","getState","res","toLowerCase","substring","indexOf","reject","newPost","post","postId"],"mappings":"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","file":"static/js/main.246004f5.chunk.js","sourcesContent":["import axios from 'axios';\r\n// const { default: axios } = require('axios');\r\n\r\nconst mainUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"d07e318e-5bc8-4780-b44a-37a9fb87fff6\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageSize: number, currentPage: number) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n            return fetch(`${mainUrl}follow/${userId}`, {\r\n            method: \"DELETE\",\r\n            credentials : \"include\",\r\n            headers: {\r\n                'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n            }\r\n        })\r\n    },\r\n    follow(userId: number) {\r\n        return fetch(`${mainUrl}follow/${userId}`, {\r\n            method: \"POST\",\r\n            credentials : \"include\",\r\n            headers: {\r\n                'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n            }\r\n        })\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn('use profileAPI.getProfile()');\r\n        return profileAPI.getProfile(userId);\r\n\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return fetch(`${mainUrl}/profile/photo`, {\r\n            method: \"PUT\",\r\n            credentials : \"include\",\r\n            headers: {\r\n                'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n            },\r\n            body: formData\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return fetch(`${mainUrl}profile/${userId}`,\r\n            {credentials: 'include'})\r\n            .then(response => response.json())\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return fetch(`${mainUrl}profile/status/${userId}`,\r\n            {credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n                }})\r\n            .then(response => response.json())\r\n\r\n    },\r\n    saveProfile(profile: object) {\r\n\r\n        return fetch(`${mainUrl}profile`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(profile)\r\n\r\n            })\r\n            .then(response => response.json())\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return fetch(`${mainUrl}auth/me`,\r\n            {credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n                }}\r\n        )\r\n            .then(response => response.json())\r\n            .catch(console.log)\r\n    },\r\n    login(email: string, password: any, rememberMe: boolean = false, captcha?: string) {\r\n        return fetch(`${mainUrl}auth/login`,\r\n            {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n                },\r\n                body: JSON.stringify({email, password, rememberMe, captcha})\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n    },\r\n    logout() {\r\n\r\n        return fetch(`${mainUrl}auth/login`,\r\n            {\r\n                method: 'DELETE',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n                },\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return fetch(`${mainUrl}security/get-captcha-url`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'API-KEY': 'd07e318e-5bc8-4780-b44a-37a9fb87fff6'\r\n                },\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n    }\r\n}\r\n","const ADD_MESSAGE_TEXT =  'ADD_MESSAGE_TEXT';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Torex'},\r\n        {id: 2, name: 'Jetkokos'},\r\n        {id: 3, name: 'Dustman'},\r\n        {id: 4, name: 'Lue kang'},\r\n        {id: 5, name: 'Big Boss'},\r\n\r\n    ],\r\n    messages:  [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi'},\r\n        {id: 3, message: 'Blalla'},\r\n        {id: 4, message: 'Do yo like it'},\r\n        {id: 5, message: 'Ok!'},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: { type: string, payload?: { dialogText: string, newMessageBody: any} }) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE_TEXT :\r\n           let body = action.payload!.newMessageBody;\r\n            return {\r\n                ...state,\r\n                    messages: [...state.messages, {id: Date.now(), message: body} ]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageTextAC = (newMessageBody: any) => ({type: ADD_MESSAGE_TEXT, payload: { newMessageBody}});\r\n\r\nexport default dialogsReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.4721fd35.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonErrorText\":\"Login_commonErrorText__rFbt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__37DI_\",\"item\":\"Navbar_item__18xtL\",\"active\":\"Navbar_active__38o9X\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../../assets/images/logo.png'\r\n\r\nconst Header = ({...props}) => {\r\n\r\n    const logOutHandler = () => {\r\n        props.logout();\r\n    }\r\n\r\n    return <header className={s.header}>\r\n\r\n        <img className={s.logo} src={logo}/>\r\n\r\n        <div className={s.loginBlock}>\r\n        { props.userAuthData.isAuth\r\n            ? <NavLink to={'/login'} onClick={logOutHandler} className={s.login} >Logout </NavLink>\r\n            : <NavLink to={'/login'} className={s.login}>Login</NavLink>\r\n        }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA =  'auth/SET_USER_DATA';\r\nconst SET_CAPTCHA =  'auth/SET_CAPTCHA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    userAvatar: null,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: { type: string, payload?: { newText: string, profile: any, data: {userId: number, login: string, email: string, userAvatar: string }} }) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n             return {\r\n                 ...state,\r\n                 ...action.payload,\r\n            }\r\n        case SET_CAPTCHA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst setAuthUserData = (userId: any, login: any, email: any, userAvatar: any, isAuth: boolean, captchaUrl?: string) => ({type: SET_USER_DATA, payload: {userId, login, email, userAvatar, isAuth, captchaUrl}});\r\n// alt + f7 usage\r\n// ctrl + alt+ shift + j - выделиить одинаковые\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n        let response = await authAPI.me();\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data;\r\n            dispatch(setAuthUserData(id, login, email, null, true));\r\n        }\r\n    }\r\nexport const login = (email: string, password: any, rememberMe: boolean, captcha?: string) => {\r\n    return async (dispatch: any) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha);\r\n        if (response.resultCode === 0 ) {\r\n            dispatch(getAuthUserData())\r\n        }\r\n        // TODO дублирование\r\n        if (response.resultCode === 1) {\r\n            dispatch(stopSubmit('login', {_error: response.messages[0]}));\r\n        }\r\n        if (response.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n            dispatch(stopSubmit('login', {_error: response.messages[0]}));\r\n        }\r\n    }\r\n}\r\nconst setCaptchaUrl = (captchaUrl: string) => ({type:SET_CAPTCHA, payload: {captchaUrl} });\r\nconst getCaptchaUrl = () => async (dispatch: any) => {\r\n        let response = await securityAPI.getCaptchaUrl();\r\n        dispatch(setCaptchaUrl(response.url));\r\n}\r\nexport const logout = () => async (dispatch: any) => {\r\n        let response = await authAPI.logout();\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, null,false, ''))\r\n        }\r\n    }\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n\r\n        // this.props.getAuthUserData();\r\n    }\r\n\r\n    render () {\r\n        return <Header {...this.props} logout = {this.props.logout} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        userAuthData: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {  logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n// console.log(s);\r\n// let s = {\r\n//     'nav': 'Navbar_nav__3ou9Q',\r\n//     'item': 'Navbar_item__3qaF3',\r\n//     'active' : 'Baksndakdn_actve'\r\n // }\r\n\r\n// let c1 = \"item\";\r\n// let c2 = \"active\";\r\n// // \"item active\"\r\n// let classes = c1 + \" \" + c2;\r\n// let classesNew = `${s.item} ${c2}`;\r\n//\r\n// console.log(classesNew)\r\n\r\nconst Navbar = () => {\r\n    const activeLink = `${s.active}`;\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={ activeLink }>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/dialogs' activeClassName={ activeLink }>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={ activeLink }>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={ activeLink }>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/settings' activeClassName={ activeLink }>Settings</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/users' activeClassName={ activeLink }>Users</NavLink>\r\n        </div>\r\n\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport style from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\ninterface IPaginator {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    pageNumber: number\r\n    onPageChanged(pageSize: number): void\r\n    portionSize: number\r\n}\r\n\r\nconst Paginator: React.FunctionComponent<IPaginator> = React.memo( ({\r\n    totalItemsCount,\r\n    pageSize,\r\n    onPageChanged,\r\n    pageNumber,\r\n    portionSize\r\n  }) => {\r\n\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1 );\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber  = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className={style.paginator}>\r\n            { portionNumber > 1 &&  <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1);\r\n                onPageChanged(leftPortionPageNumber - portionSize)\r\n                console.log('leftPortionPageNumber', leftPortionPageNumber)\r\n                console.log('portionSize', portionSize)\r\n            }\r\n            }>-</button>}\r\n\r\n                { pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\r\n                    .map(p => <span\r\n                        className={cn({\r\n                            [style.selectedPage] : p === pageNumber,\r\n                            [style.selectedPage2] : p === pageNumber + 1,\r\n                        }, style.pageNumber) }\r\n                        key={p}\r\n                        onClick={() => {\r\n                            onPageChanged(p)\r\n                            console.log(p)\r\n                            console.log(leftPortionPageNumber)\r\n                        }\r\n                     }>{p}</span>)\r\n\r\n                }\r\n\r\n            { portionCount > portionNumber && <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1);\r\n                onPageChanged(rightPortionPageNumber + 1);\r\n            }}>+</button>\r\n\r\n\r\n\r\n            }\r\n            <div>\r\n                {/*<button onClick={() => {*/}\r\n                {/*    setPortionNumber(portionCount * portionNumber);*/}\r\n                {/*    onPageChanged(portionCount * portionNumber * portionSize - 4);*/}\r\n                {/*    console.log( portionNumber)*/}\r\n\r\n                {/*}}>last</button>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport userPhoto from '../../assets/images/avatar.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Users.module.css'\r\n\r\ninterface IUser {\r\n    follow(userId: number) : void\r\n    unfollow(userId: number) : void,\r\n    followingInProgress: Array<number>\r\n    user: {name: string, id: number, uniqueUrlName?: any, photos: {small: string, large: string},\r\n          status: any, followed: boolean}\r\n}\r\n\r\nconst User: React.FunctionComponent<IUser> = ({user, unfollow, follow, followingInProgress}) => {\r\n    return (\r\n     <div className={style.user}>\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img alt='avatar'\r\n                         style={{width: '100px'}}\r\n                         src={user.photos.small ? user.photos.small : userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>{user.name}</div>\r\n        </div>\r\n        <div> {user.status}</div>\r\n        <div style={{marginBottom: '10px'}}>\r\n            { user.followed\r\n                ? <button disabled={followingInProgress.some((id: number) => id === user.id)}  className={style.follow}\r\n                          onClick={() => unfollow(user.id)}>\r\n                    unfollow\r\n                </button>\r\n                : <button disabled={followingInProgress.some((id: number) => id === user.id )}  className={style.follow}\r\n                          onClick={() => follow(user.id)}>\r\n                    follow\r\n                </button>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {IUser} from \"../../interfaces\";\r\nimport style from './Users.module.css'\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from './User';\r\n\r\ninterface IUsers {\r\n    follow(userId: number) : void\r\n    unfollow(userId: number) : void,\r\n    getRequestUsers(pageNumber: number, pageSize: number ) : void\r\n    users: Array<IUser>\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    pageNumber: number\r\n    isFetching: boolean\r\n    toggleFollowingInProgress(isFetching: boolean, userId: number) : void\r\n    followingInProgress: Array<number>,\r\n    portionSize: number\r\n}\r\n\r\nconst Users: React.FunctionComponent<IUsers> = React.memo( ({\r\n    unfollow,\r\n    follow,\r\n    getRequestUsers,\r\n    users,\r\n    pageSize,\r\n    totalItemsCount,\r\n    pageNumber,\r\n    isFetching,\r\n    followingInProgress,\r\n    portionSize\r\n  }) => {\r\n\r\n    useEffect(() => {\r\n        getRequestUsers(pageNumber, pageSize);\r\n    }, [pageNumber])\r\n\r\n    const onPageChanged = React.useCallback((pageNumber: number) => {\r\n        getRequestUsers(pageNumber, pageSize)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={style.users}>\r\n            <Paginator\r\n                totalItemsCount ={totalItemsCount}\r\n                pageSize = {pageSize}\r\n                onPageChanged = {onPageChanged}\r\n                pageNumber={pageNumber}\r\n                portionSize={ portionSize}\r\n            />\r\n            { isFetching ? <Preloader/>\r\n                    :\r\n                    <>\r\n\r\n                        <div className={style.usersWrapper}>\r\n                            {users.map((user: IUser) => {\r\n                               return <User\r\n                                   key = {user.id}\r\n                                   user = {user}\r\n                                   unfollow = {unfollow}\r\n                                   follow = {follow}\r\n                                   followingInProgress = {followingInProgress}\r\n                               />\r\n                            })}\r\n                        </div>\r\n                    </>\r\n            }\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Users;\r\n","import {IUser} from \"../interfaces\";\r\nimport {usersAPI} from \"../api/api\";\r\nconst FOLLOW =  'FOLLOW';\r\nconst UNFOLLOW =  'UNFOLLOW';\r\nconst SET_USERS =  'SET_USERS';\r\nconst SET_CURRENT_PAGE =  'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT =  'SET_TOTAL_USERS_COUNT';\r\nconst SHOW_LOADER =  'SHOW_LOADER';\r\nconst HIDE_LOADER =  'HIDE_LOADER';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS =  'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst FAKE =  'FAKE';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 24,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    portionSize: 5\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action: { type: string, payload?: { userId?: number, page: number, usersCount: number, users: Array<IUser>, isFetching?: boolean} }) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {...state,\r\n                users: state.users.map( (user: IUser) => {\r\n                    if (user.id === action.payload!.userId) {\r\n                        return { ...user, followed: true }\r\n                    } else {\r\n                        return user\r\n                    }\r\n                })\r\n            }\r\n        case UNFOLLOW :\r\n            return {...state,\r\n                users: state.users.map( (user: IUser) => {\r\n                    if (user.id === action.payload!.userId) {\r\n                        return { ...user, followed: false }\r\n                    } else {\r\n                        return user\r\n                    }\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [ ...action.payload!.users]}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload!.page }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.payload!.usersCount }\r\n\r\n        case SHOW_LOADER:\r\n            return {...state, isFetching: true }\r\n\r\n        case HIDE_LOADER:\r\n            return {...state, isFetching: false }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.payload!.isFetching\r\n                    ? [...state.followingInProgress,  action.payload!.userId ]\r\n                    :  state.followingInProgress.filter((id: number) => id !== action.payload!.userId)\r\n            }\r\n\r\n        case FAKE:\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, payload: {userId}});\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, payload: {userId}});\r\nexport const setUsers = (users: IUser[]) => ({type: SET_USERS, payload: {users}});\r\nexport const setCurrentPage = (page: number) => ({type: SET_CURRENT_PAGE, payload: {page}});\r\nexport const setTotalUsersCount = (usersCount: number) => ({type: SET_TOTAL_USERS_COUNT, payload: {usersCount}});\r\nexport const showLoader = () => ({type: SHOW_LOADER});\r\nexport const hideLoader = () => ({type: HIDE_LOADER});\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, payload: {isFetching, userId}});\r\n\r\n\r\nexport const getRequestUsers = (page: number, pageSize: number) => {\r\n\r\n    return (dispatch: any) => {\r\n\r\n        dispatch(showLoader());\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(pageSize, page)\r\n            .then(json => {\r\n                dispatch(setUsers(json.items))\r\n                dispatch(setTotalUsersCount(json.totalCount))\r\n                dispatch(hideLoader());\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import { createSelector } from 'reselect'\r\n// const { createSelector } = require('reselect');\r\n\r\nexport const getUsersSelector = (state: any) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users: any) => {\r\n     return users.filter((user: any) => true)\r\n})\r\n\r\nexport const getPageSize = (state: any) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: any) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: any) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPortionSize = (state: any) => {\r\n    return state.usersPage.portionSize\r\n\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {follow, getRequestUsers, setCurrentPage, toggleFollowingInProgress, unfollow} from \"../../redux/users-reducer\";\r\nimport {IState} from \"../../interfaces\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getPortionSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n\r\n} from \"../../redux/user-selectors\";\r\n\r\nlet mapStateToProps = (state: IState) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        pageNumber: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    getRequestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress\r\n})(Users);\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport logo from \"../assets/images/avatar.png\"\r\n\r\nconst Error = (props: any) => {\r\n    return <div style={{border: \"1px red solid\", color: '#fff'}}>Не получилось удалить объект children {props.counter}</div>\r\n}\r\n\r\nconst Success = () => {\r\n    return <div style={{border: \"1px gold solid\", color: '#fff'}}>Все хорошо, добавить премию еще раз?</div>\r\n}\r\n\r\nconst Avatar = () => {\r\n    return <div style={{border: \"1px gold solid\"}}><img alt=\"logo\" style={{height: \"100px\"}} src={logo}/></div>\r\n}\r\n\r\n    const Confirm = (props: any) => {\r\n\r\n        const [counter, setCounter] = useState(10);\r\n\r\n        const ref = React.createRef<HTMLButtonElement>()\r\n\r\n        useEffect(()=> {\r\n           const content = ref.current\r\n            let counterInterval = setInterval(() => {\r\n                setCounter((counter) => {\r\n                    if (counter === 1) {\r\n                        clearInterval(counterInterval);\r\n                    }\r\n                    return counter - 1\r\n                })\r\n            }, 1000)\r\n        },[])\r\n\r\n        return (\r\n            <div style={{width: \"200px\", border: \"1px red black\", padding: \"10px\", background: \"purple\"}}>\r\n                <div>{props.renderContent(counter)}</div>\r\n                <hr/>\r\n                <div>\r\n                    <button ref={ref} onClick={() => props.onOkClick()}>Ok</button>\r\n                    <button onClick={() => props.onCancelClick()}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nclass MainAppRenderProps extends React.PureComponent {\r\n    state = {\r\n        success: true,\r\n        error: true,\r\n        avatar: true\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.state.error && <Confirm\r\n                    onOkClick = { () => { alert('error'); this.setState({error: false})}}\r\n                    renderContent ={(counter: number) => <Error counter={counter} />}\r\n                    onCancelClick={() => this.setState({error: false})}\r\n                />\r\n                }\r\n                <br/>\r\n                <br/>\r\n                { this.state.success && <Confirm\r\n                    onOkClick = {() =>{alert('Ok'); this.setState({success: false})}}\r\n                    renderContent ={() => <Success />}\r\n                    onCancelClick={() => this.setState({success: false})}\r\n                />\r\n                }\r\n                <br/>\r\n                <br/>\r\n                { this.state.avatar && <Confirm\r\n                    onOkClick = {() => {alert('avatar'); this.setState({avatar: false})}}\r\n                    renderContent ={() => <Avatar />}\r\n                    onCancelClick={() => this.setState({avatar: false})}\r\n                />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MainAppRenderProps;\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {connect} from \"react-redux\";\r\nimport {required} from \"../../utils/Form-validator\";\r\nimport {Input} from '../common/FormControls/FormControls';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './Login.module.css';\r\n\r\nfunction LoginForm (props: any) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"email\"\r\n                    placeholder='Введите логин'\r\n                    component={Input} type=\"text\"\r\n                    validate = {[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name=\"password\"\r\n                       placeholder='Введите пароль'\r\n                       component={Input}\r\n                       type=\"password\"\r\n                       validate = {[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\"/> rememberMe\r\n            </div>\r\n            {\r\n                props.error ? <div className={s.commonErrorText}>{props.error}</div>\r\n                    : ''\r\n            }\r\n            <div>\r\n                <button> Войти</button>\r\n            </div>\r\n\r\n            {\r\n                props.captchaUrl ? <div> <img alt='' src={props.captchaUrl}/>\r\n                    <div>\r\n                        <Field\r\n                            name=\"captcha\"\r\n                            placeholder=\"captcha\"\r\n                            component={Input}\r\n                            type=\"text\"\r\n                            valid = {[required]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                    : ''\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction Login({login, isAuth}: any) {\r\n\r\n    const loginSubmit = (formData :any) => {\r\n        const {email, password, rememberMe, captcha } = formData;\r\n        login(email, password, rememberMe, captcha);\r\n    }\r\n\r\n    if (isAuth) return <Redirect to='/profile'/>\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n          <LoginReduxForm onSubmit={loginSubmit} />\r\n\r\n        </>\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state: any) => ({isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl});\r\n\r\nlet LoginReduxForm = reduxForm({form: 'login'})(connect(mapStateToProps, null)(LoginForm));\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS =  'INITIALIZED_SUCCESS';\r\n\r\ntype actionType = {\r\n    type: string;\r\n}\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n    globalError: any\r\n};\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\n// export type InitialStateType = typeof initialState;\r\n\r\ntype InitializeSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nconst appReducer = (state = initialState, action: actionType): InitialStateType => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initializedSuccess = (): InitializeSuccessActionType => ({ type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n         let promise = dispatch(getAuthUserData())\r\n\r\n         Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;\r\n","import React, {Suspense} from \"react\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\nconst withSuspense = (Component: any) => {\r\n    return () => {\r\n        return  <Suspense fallback={<Preloader />}>\r\n            <Component />\r\n        </Suspense>\r\n    }\r\n\r\n}\r\n\r\nexport default withSuspense;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n// import MainAppHoc from \"./hooks/mainAppHoc\";\r\n// import MainAppChildren from \"./hooks/mainAppChildren\";\r\nimport MainAppRenderProps from \"./hooks/mainAppRenderProps\";\r\nimport LoginPage from './components/Login/Login';\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport {connect, Provider} from 'react-redux';\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport { compose } from 'redux';\r\nimport store from './redux/redux-store';\r\nimport withSuspense from \"./components/hoc/withSuspense\";\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\n\r\nclass App extends React.Component<any> {\r\n\r\n    catchAllUnhandledErrors = () => {\r\n        alert('some error occured')\r\n        // TODO dispatch(globalError) Выпадашка\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.initialized) {\r\n            return (\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer />\r\n                    <Navbar />\r\n                    <div className='app-wrapper-content'>\r\n                        <Switch>\r\n                            <Route path='/' exact render={() => <Redirect to='/profile'/>}/>\r\n                            <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                            <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                            <Route path='/profile/:userId?' render={ withSuspense(ProfileContainer)}/>\r\n                            <Route path='/users' render={ () => <UsersContainer /> }/>\r\n                            <Route path='/hooks' render={ () => <MainAppRenderProps /> }/>\r\n                            <Route path='/login' render={ () => <LoginPage /> }/>\r\n                            <Route path='*' render={ () => <div>404 NOT FOUND</div> }/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Preloader />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nlet AppContainer = compose(\r\n    connect(mapStateToProps,{initializeApp}) (App))\r\n\r\nconst MainApp = (props: any) => {\r\n   return <Router>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </Router>\r\n}\r\n\r\n\r\nexport default MainApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3YRl6\",\"usersWrapper\":\"Users_usersWrapper__f-JKB\",\"user\":\"Users_user__2mUG4\",\"follow\":\"Users_follow__1AQgf\",\"user_follow__dGnF0\":\"Users_user_follow__dGnF0__31Znh\"};","import React from 'react'\r\nimport './Preloader.css'\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"lds-hourglass\"></div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ufS2v\",\"authUser\":\"Header_authUser__tDrEi\",\"login\":\"Header_login__1uJBP\",\"loginBlock\":\"Header_loginBlock__25iCt\",\"loginAva\":\"Header_loginAva__B8gfv\",\"logo\":\"Header_logo__3Q_nJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__M54P7\",\"selectedPage\":\"Paginator_selectedPage__tngjC\",\"selectedPage2\":\"Paginator_selectedPage2__2qSG7\",\"paginator\":\"Paginator_paginator__1lDJd\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.029ca91f.png\";","import React from \"react\";\r\n\r\nexport const required = (value: any) => value ? undefined : 'Required!!';\r\nexport const maxLength = (max: any) => (value: any) => value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const number = (value: any) => value && isNaN(Number(value)) ? 'Must be a number' : undefined;\r\n\r\n","import s from \"../../Profile/MyPosts/MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/Form-validator\";\r\n\r\n//\r\n// export const FormControl = ({  input, meta: { touched, error }, ...rest }: any) => {\r\n//     const hasError = error && touched;\r\n//     return (\r\n//         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n//             {rest.children}\r\n//             {hasError && <span>{error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Input = (props: any) => {\r\n//\r\n//     const {input, meta, ...restProps} = props\r\n//     return (\r\n//         <FormControl {...props}>\r\n//             <input {...input} {...restProps} />\r\n//         </FormControl>\r\n//     )\r\n// }\r\n// export const TextArea = (props: any) => <FormControl {...props} Element = {'textarea'} />\r\n\r\nexport const FormControl = ({ input, meta: { touched, error }, ...rest }: any) => {\r\n\r\n    const hasError = error && touched;\r\n    return (\r\n            <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n                <div>\r\n                    <rest.element {...input} {...rest} />\r\n                </div>\r\n\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport const fieldCreator = (name: any,\r\n                             component: any,\r\n                             type='text',\r\n                             validators: any,\r\n                             placeholder: any, ...props: any) => {\r\n\r\n    return <Field\r\n        name={name}\r\n        component={component}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        validate = {validators}\r\n    />\r\n}\r\nexport const FieldCreator = ({name, component, type='text', placeholder}: any) => {\r\n    return <Field\r\n        name={name}\r\n        component={component}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        // validate = {[required]}\r\n    />\r\n}\r\n\r\n// export const editableProfileField = (name: any) => {\r\n//\r\n// }\r\n\r\nexport const Input = (props: any) => <FormControl {...props} element = {'input'} />\r\nexport const TextArea = (props: any) => <FormControl {...props} element = {'textarea'} />\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsWrapper\":\"MyPosts_myPostsWrapper__2-6mE\",\"formControl\":\"MyPosts_formControl__1qpWR\",\"error\":\"MyPosts_error__2ev5x\"};","import {profileAPI, usersAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST =  'ADD_POST';\r\nconst SET_USER_PROFILE =  'SET_USER_PROFILE';\r\nconst SET_STATUS =  'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst FAKE_USERS =  'FAKE_USERS';\r\nconst SAVE_PHOTO_SUCCESS =  'SAVE_PHOTO_SUCCESS';\r\nconst SET_PROFILE_UPDATE_STATUS =  'SET_PROFILE_UPDATE_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello',likesCount: 1},\r\n        {id: 2, message: 'Hi',likesCount: 1},\r\n    ],\r\n    profile: null as unknown,\r\n    status: '',\r\n    profileUpdateStatus: 'none',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: { type: string, payload?: { newText: string, profile: any, status: string, newPostText: any, postId: number, photos: any} }) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: Date.now(), message: action.payload!.newPostText, likesCount: 1\r\n            }\r\n             return {\r\n                ...state, newPostText: '', posts: [...state.posts, newPost]\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.payload!.profile\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state, status: action.payload!.status\r\n            }\r\n        case FAKE_USERS:\r\n        return {\r\n            ...state, posts: []\r\n        }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, posts: state.posts.filter((post) => post.id !== action.payload!.postId)\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state, profile: {...state.profile as {} , photos: action.payload!.photos.photos}\r\n            }\r\n        case SET_PROFILE_UPDATE_STATUS:\r\n            return {\r\n                ...state, profileUpdateStatus: action.payload!.status\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText: any) => ({type: ADD_POST, payload: {newPostText}});\r\nconst setUserProfile = (profile: any) => ({type: SET_USER_PROFILE, payload: { profile }});\r\nconst setProfileUpdateStatus = (status: any) => ({type: SET_PROFILE_UPDATE_STATUS, payload: {status}});\r\nconst setStatus = (status: string) => ({type: SET_STATUS, payload: { status }});\r\nexport const deletePost = (postId: number) => ({type: DELETE_POST, payload: {postId}})\r\nexport const savePhotoSuccess = (photos: any) => ({type: SAVE_PHOTO_SUCCESS, payload: {photos}})\r\nexport const getStatus = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(json => {\r\n                dispatch(setStatus(json))\r\n            })\r\n    }\r\n}\r\nexport const updateStatus = (status: string) => {\r\n    return (dispatch: any) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(json => {\r\n                if (json.resultCode === 0) {\r\n                    dispatch(setStatus(status) )\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n        })\r\n    }\r\n}\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: any) => {\r\n\r\n         usersAPI.getProfile(userId)\r\n             .then(json => {dispatch(setUserProfile(json))\r\n        })\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => {\r\n    return async (dispatch: any) => {\r\n         let json =  await usersAPI.savePhoto(file);\r\n\r\n         if (json.resultCode === 0) {\r\n             dispatch(savePhotoSuccess(json.data));\r\n         }\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: any) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        let json =  await profileAPI.saveProfile(profile);\r\n\r\n        if (json.resultCode === 0) {\r\n            dispatch(setProfileUpdateStatus('success'));\r\n            dispatch(setUserProfile(profile));\r\n            dispatch(setProfileUpdateStatus('none'));\r\n        }\r\n\r\n        // TODO сделано\r\n        // 47:00 это же безумие делать лишний запрос к серверу!!! Если мы только\r\n        // что отправили данные на сервер и он ответил, что они приняты -\r\n        // нельзя ли взять эти же данные (которые мы отправляли) и их задиспатчить с\r\n        // стейт сразу? Потому что, КАКИЕ еще данные нам может вернуть сервер, кроме тех,\r\n        // которые мы сами же ему только что отправили.\r\n\r\n            else {\r\n                setProfileUpdateStatus('error');\r\n                const res = json.messages[0].toLowerCase();\r\n                const err = res.substring(res.length - 1 , res.indexOf('>') + 1);\r\n\r\n                dispatch(stopSubmit('profile-info',{'contacts': {\r\n                        [err]: json.messages[0]\r\n                    }}))\r\n\r\n                return Promise.reject(json.messages[0]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}