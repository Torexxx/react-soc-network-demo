{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/hoc/withAuthRedirect.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToPropsWithRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","message","className","s","DialogItem","id","name","dialog","activeClassName","active","reduxForm","form","handleSubmit","onSubmit","Field","component","placeholder","Dialogs","sendNewMessage","dialogsPage","console","log","messageElements","messages","map","m","key","dialogsElements","dialogs","dialogsItems","values","body","newMessageBody","DialogsContainer","dispatch","addMessageTextAC"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,gBAAkB,iCAAiC,SAAW,4B,sICG/PC,EAA8B,SAACC,GACjC,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAoB,IAE3CC,EAF0C,uKAIxC,OAAKC,KAAKC,MAAMN,OAEZ,kBAACG,EAAcE,KAAKC,OAFO,kBAAC,IAAD,CAAUC,GAAG,eAJJ,GAEhBC,IAAML,WAStC,OAAOM,YAAQX,EAARW,CAAqCL,K,uFCXjCM,MAPf,YAAiC,IAAfC,EAAc,EAAdA,QAEd,OACI,yBAAKC,UAAWC,IAAEF,SAAUA,I,QCYrBG,EAT8C,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAE/D,OACI,yBAAKJ,UAAWC,IAAEI,QACd,kBAAC,IAAD,CAASV,GAAE,mBAAcQ,GAAMG,gBAAmBL,IAAEM,QAASH,K,iBCD1DI,cAAU,CAACC,KAAM,wBAAjBD,EATQ,SAAC,GAA0B,IAAxBE,EAAuB,EAAvBA,aACtB,OACI,0BAAMC,SAAUD,GACZ,kBAACE,EAAA,EAAD,CAAQC,UAAU,WAAWT,KAAM,iBAAkBU,YAAY,eACjE,4CCkCGC,EAxBwC,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,YAAyB,EAAZ7B,OAClF8B,QAAQC,IAAI,kBACX,IAAIhC,EAAQ8B,EACRG,EAAkBjC,EAAMkC,SAASC,KAAK,SAACC,GAAD,OAAqC,kBAAC,EAAD,eAASC,IAAKD,EAAEpB,IAAQoB,OACnGE,EAAkBtC,EAAMuC,QAAQJ,KAAK,gBAAEnB,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OAAoB,kBAAC,EAAD,CAAYoB,IAAKrB,EAAIC,KAAQA,EAAMD,GAAIA,OAOrG,OACI,yBAAKH,UAAWC,IAAEyB,SACf,yBAAK1B,UAAWC,IAAE0B,cACZF,EACH,kBAAC,EAAD,CAAgBd,SATJ,SAACiB,GACnB,IAAIC,EAAOD,EAAOE,eAClBd,EAAea,OASX,yBAAK7B,UAAWC,IAAEoB,UACZD,K,iBCfZW,EAAmBlC,aAdH,SAACV,GACnB,MAAO,CACH8B,YAAa9B,EAAM8B,gBAIF,SAACe,GACtB,MAAO,CACHhB,eAAgB,SAACc,GACbE,EAASC,YAAiBH,QAKbjC,CAA6CP,YAAiByB,IAExEgB","file":"static/js/4.80c0a153.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__DN6PK\",\"dialog\":\"Dialogs_dialog__1f4-s\",\"message\":\"Dialogs_message__1S97X\",\"active\":\"Dialogs_active__1Iuax\",\"dialogsItems\":\"Dialogs_dialogsItems__fIzff\",\"dialogsMessages\":\"Dialogs_dialogsMessages__25KoC\",\"messages\":\"Dialogs_messages__3-0OR\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsWithRedirect = (state: any) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return (\r\n                <Component {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsWithRedirect)(RedirectComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\n\r\nfunction Message({message}:any) {\r\n    // let {message} = props\r\n    return (\r\n        <div className={s.message}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype DialogItemProps = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FunctionComponent<DialogItemProps> = ({id, name}) => {\r\n    // let {id, name} = props\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={`/dialogs/${id}`} activeClassName = {s.active}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst AddMessageForm = ({ handleSubmit}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field  component=\"textarea\" name={'newMessageBody'} placeholder='Enter text'/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {IDialog, IMessage} from \"../../interfaces\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\ntype DialogsProps = {\r\n    dialogsPage: {\r\n        dialogs: Array<IDialog>\r\n        messages: Array<IMessage>\r\n        newMessageText: string\r\n    }\r\n    sendNewMessage(body: any): void\r\n    isAuth: boolean,\r\n}\r\n\r\nconst Dialogs: React.FunctionComponent<DialogsProps> = ({sendNewMessage, dialogsPage, isAuth}) => {\r\n    console.log('DIALOGS RENDER')\r\n     let state = dialogsPage;\r\n     let messageElements = state.messages.map( (m:{id: number, message: string}) => <Message key={m.id} {...m} /> );\r\n     let dialogsElements = state.dialogs.map( ({id, name}:any) => <DialogItem key={id} name = {name} id={id} /> );\r\n\r\n    const addNewMessage = (values: any) => {\r\n        let body = values.newMessageBody;\r\n        sendNewMessage(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n           <div className={s.dialogsItems}>\r\n               { dialogsElements }\r\n              <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n            <div className={s.messages }>\r\n                { messageElements }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import {addMessageTextAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {IState} from \"../../interfaces\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state: IState) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        sendNewMessage: (newMessageBody: any) => {\r\n            dispatch(addMessageTextAC(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(Dialogs));\r\n\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}